import { BaseAppMediator } from "@flashist/appframework/base/mediators/BaseAppMediator";
import { LoadGroup, LoadManager } from "@flashist/flibs";
import { RendererManager } from "@flashist/appframework";
import { IframeAppCommunicationManager } from "../../iframe-app/managers/IframeAppCommunicationManager";
import { AdvAdapter } from "../../platform/abstract/AdvAdapter";
import { PlatformAdapter } from "../../platform/abstract/PlatformAdapter";
import { GamePreloaderPageView } from "./GamePreloaderPageView";
import { IframeAppManager } from "../../iframe-app/managers/IframeAppManager";
export declare class GamePreloaderPageMediator extends BaseAppMediator<GamePreloaderPageView> {
    protected loadManager: LoadManager;
    protected platformAdapter: PlatformAdapter;
    protected advAdapter: AdvAdapter;
    protected iframeAppCommunicationManager: IframeAppCommunicationManager;
    protected iframeAppManager: IframeAppManager;
    protected rendererManager: RendererManager;
    protected initLoadingGroup: LoadGroup;
    protected isPrepareStarted: boolean;
    protected isPrepareComplete: boolean;
    protected initLoadingGroupCoef: number;
    protected prepareGameLoadingCoef: number;
    protected totalProgress: number;
    protected lastProcessedInitLoadingGroupProgress: number;
    protected fakeProgressValue: number;
    protected fakeProgressIncreasePerMs: number;
    protected fakeProgressMaxLimit: number;
    protected fakeProgressInterval: any;
    protected fakeProgressLastProcessedTime: number;
    protected lastProcessedIframeAppTotalLoadingProgress: number;
    protected iframeAppTotalLoadingCoef: number;
    onActivatorStart(activator: GamePreloaderPageView): void;
    onActivatorEnd(): void;
    protected onIframeTotalLoadingProgress(progress: number): void;
    protected onInitLoadingGroupProgress(): void;
    protected processInitLoadingGroupProgress(progres: number): void;
    protected setProgress(progress: number): void;
    protected commitProgressData(): void;
    protected prepareGame(): Promise<void>;
    private onViewProgressComplete;
    protected stopFakeProgress(): void;
    protected startFakeProgress(): void;
}
